СЛЕДУЕТ ПОКРЫТЬ ТРЕЙСИНГОМ
  Shop API
  Shop BD
  CRM API
  3d files storage
  MES API
  MES db
  Messages Queue

  Список данных для трейсинга:
    название окружения
    app_id - id приложения
    trace_id - id операции
    span_id - id запроса
    url запроса
    payload запроса
    время запроса

МОТИВАЦИЯ
  Трейсинг поможет:
    1. быстро находить причины проблем:
      - медленной работы сервисов
      - потери заказов

    2. быстрее реагировать и решать жалобы пользователей (увеличит удовлетворенность (CSAT), повысит лояльность (NPS) пользователей)

    3. позволит сделать систему более надежной

ПРЕДЛАГАЕМОЕ РЕШЕНИЕ
  Для реализации трейсинга будет использован фреймворк OpenTelemetry.
  С помощью OTel SDK нужно добавить отправку сигналов в микросервисы, БД, файловое хранилище и очередь сообщений на бэкенде.
  Нужно настроить OTel коллектор для обработки данных и отправки в хранилище телеметрии.
  В качестве хранилища телеметрии будет использован Jaeger, а для визуализации Jaeger-UI.

  C4: https://disk.yandex.ru/d/GvqJHEvurd-kzA

КОМПРОМИССЫ
  1. Трейсинг будет излишнем, если система является монолитной, где можно лего отследить путь запроса по логам
  2. Если в системе присутствует проприетарное ПО, то может быть сложно заставить это ПО отдавать метрики в нужном формате

БЕЗОПАСНОСТЬ
  1. Настройка whitelist-а для приложений, которые могут писать метрики
  2. Настройка аутентификации в системе сбора и визуализации метрик
  