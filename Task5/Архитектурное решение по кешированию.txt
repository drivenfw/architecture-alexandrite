МОТИВАЦИЯ
  1. На данный момент в системе есть проблема со скоростью загрузки страницы с заказами в MES.
    Узким местом в данном случае является MES DB, добавление кеширования здесь позволит снизить нагрузку на базу и уменьшит latency загрузки заказов.
  2. Также можно настроить кеш для Shop DB, т.к. есть жалобы от пользователей онлайн магазина по поводу их заказов.

ПРЕДЛАГАЕМОЕ РЕШЕНИЕ
  На клиенте можно кешировать статику (css, js, images) для веб-приложений Internet Shop, CRM, MES.
  Для снижения нагрузки на БД буду использовать серверное кеширование,
  т.к. нужна возможность программной ивалидации кеша (список заказов, информация по заказу).

  В первую очередь нужно оптимизировать операции чтения, т.к. пользователи жалуются на медленую загрузку данных.
  Для кеширования буду использовать паттерн Cache-Aside с предварительным прогревом.
  Из минусов - потребуется доработка на стороне приложения (MES API, Shop API)
  Из плюсов - устойчивость к сбоям кеша + можно держать другую модель данных в кеше (например, JOIN заказов с исполнителями)
 
  Здесь также можно было бы использовать паттерны Read-Through и Refresh-Ahead.
  В первом случае будет большая чувствительность к ошибкам кеша, а также модель данных должна быть идентичной той, что в БД. 
  Во втором случае нужна качественная система мониторинга для отслеживания ошибок обновления кеша.

  Sequence diagram: https://disk.yandex.ru/d/Jc__w83-KOqKwg

  Инвалидация кеша
    Для инвалидации кеша буду использовать стратегию программной инвалидации:
      - при изменении деталей/статуса заказа будет инвалидироваться заказ по ключу
      - при добавлении/удалении заказов будет инвалидировать список заказов
      